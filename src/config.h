/* Copyright (C) 2021 Lee C. Bussy (@LBussy)

This file is part of Lee Bussy's Bee Snuggler (bee-snuggler.)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */

#pragma once
#ifndef CONFIG_H
#define CONFIG_H

//////////////////////////////////////////////////////////////////////////
//
// Set verbosity of debug messages 0-6
//
//      * 0 - LOG_LEVEL_SILENT     no output
//      * 1 - LOG_LEVEL_FATAL      fatal errors
//      * 2 - LOG_LEVEL_ERROR      all errors
//      * 3 - LOG_LEVEL_WARNING    errors, and warnings
//      * 4 - LOG_LEVEL_NOTICE     errors, warnings and notices
//      * 5 - LOG_LEVEL_TRACE      errors, warnings, notices & traces
//      * 6 - LOG_LEVEL_VERBOSE    all
//
// Uncomment #define DISABLE_LOGGING to remove all logging
//
#ifndef LOG_LEVEL
#define LOG_LEVEL LOG_LEVEL_VERBOSE
// #define DISABLE_LOGGING // Uncomment to disable all logging
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Double Reset Detect Configuration
// https://github.com/khoih-prog/ESP_DoubleResetDetector/
//
#ifndef DRD_TIMEOUT
#define ESP_DRD_USE_SPIFFS true
#define DOUBLERESETDETECTOR_DEBUG false
#define DRD_TIMEOUT 5
#define DRD_ADDRESS 0 // Not used for SPIFFS, still needed for init
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Echo all serial output to telnet
//
#ifndef DOTELNET
#define DOTELNET true
#endif
//
#if DOTELNET == true
#ifndef TELNETPORT
#define TELNETPORT 23
#endif
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Use SPIFFS Editor
//
#ifndef SPIFFSEDIT
#define SPIFFSEDIT
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// SPIFFS Editor Username
//
#ifndef SPIFFSEDITUSER
#define SPIFFSEDITUSER "admin"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// SPIFFS Editor Username
//
#ifndef SPIFFSEDITPW
#define SPIFFSEDITPW "p@ssword"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Reset controller every 24 hours
//
#ifndef ESPREPBOOT
#define ESPREBOOT (24 * 60 * 60)
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Reset NTP every 24 hrs
//
#ifndef NTPRESET
#define NTPRESET (24 * 60 * 60)
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Minumum Free Heap, triggers reset if below this value
//
#ifndef MINFREEHEAP
#define MINFREEHEAP 10000
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define API Key (identifies application to target)
//
#ifndef API_KEY
#define API_KEY "Bee Snuggler"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define data source (identifies sensor source to target)
//
#ifndef SOURCE
#define SOURCE "Bee Snuggler"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set WiFi Channel (1, 6, 11 are the only ones which should be used)
// https://www.metageek.com/training/resources/why-channels-1-6-11.html
//
#ifndef WIFI_CHAN
#define WIFI_CHAN 1
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set WiFi country (US, JP or CN)
// US = 1-11, CN = 1-13, JP = 1-14
//
#ifndef WIFI_COUNTRY
#define WIFI_COUNTRY "US"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set serial baud rate (if not set via PlatformIO build flag)
//
#ifndef BAUD
#define BAUD 115200
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access Point name
//
#ifndef APNAME
#define APNAME "beesnuggler"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access point password
//
#ifndef AP_PASSWD
#define AP_PASSWD "beesnuggler"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// File name for configuration JSON
//
#ifndef FILENAME
#define FILENAME "/config.json"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Upgrade URL
//
#ifndef UPGRADEURL
#define UPGRADEURL "http://firmware.beesnuggler.com/"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// File name for version JSON
//
#ifndef VERSIONJSON
#define VERSIONJSON "/version.json"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default host name
//
#ifndef HOSTNAME
#define HOSTNAME "beesnuggler"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default Yard name
//
#ifndef YARDNAME
#define YARDNAME "Yard 1"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default Hive name
//
#ifndef HIVENAME
#define HIVENAME "Hive 1"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Poll Bee Snuggler server for available version (time in seconds)
//
#ifndef POLLSERVERVERSION
#define POLLSERVERVERSION 3600
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when loading config fails
//
#ifndef CONFIGBLINK
#define CONFIGBLINK 2000UL // 2000ms each state = 4000ms per cycle = 0.25Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in Access Point blocking loop
//
#ifndef APBLINK
#define APBLINK 1000UL // 1000ms each state = 2000ms per cycle = 0.5Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in Station Connect blocking loop
//
#ifndef STABLINK
#define STABLINK 333UL // 333ms each state = 666ms per cycle = ~1.5Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Frequency with which to blink LED when in NTP blocking loop
//
#ifndef NTPBLINK
#define NTPBLINK 50UL // 50ms each state = 100ms per cycle = 10Hz
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Port for local web services
//
#ifndef HTTPPORT
#define HTTPPORT 80
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// NTP Server
//
#ifndef TIMESERVER
#define TIMESERVER "pool.ntp.org", "time.nist.gov"
#define THISTZ TZ_Etc_GMT
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Output pin for LED
//
#ifndef LED
#define LED LED_BUILTIN
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Number of temp readings in a sliding window for averaging (one per min)
//
#ifndef TEMPAVG
#define TEMPAVG 6
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Number of temperature sensors
//
#ifndef NUMSENSOR
#define NUMSENSOR 5
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define ambient sensor pin
//
#ifndef AMBSENSE
#define AMBSENSE 32
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define upper hive temp sensor pin
//
#ifndef UPPERSENSE
#define UPPERSENSE 33
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define center hive temp sensor pin
//
#ifndef CENTERSENSE
#define CENTERSENSE 25
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define lower hive temp sensor pin
//
#ifndef LOWERSENSE
#define LOWERSENSE 26
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define output temp sensor pin
//
#ifndef OUTPUTSENSE
#define OUTPUTSENSE 14
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define ambient sensor name
//
#ifndef AMBTEMP
#define AMBTEMP "ambient"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define upper hive temp sensor name
//
#ifndef UPPERTEMP
#define UPPERTEMP "upper"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define center hive temp sensor name
//
#ifndef CENTERTEMP
#define CENTERTEMP "center"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define lower hive temp sensor name
//
#ifndef LOWERTEMP
#define LOWERTEMP "lower"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define output temp sensor name
//
#ifndef OUTPUTTEMP
#define OUTPUTTEMP "output"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default max output air setpoint
//
#ifndef DEFMAX
#define DEFMAX 120.0
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// MAx output air enable default
//
#ifndef MAXENABLE
#define MAXENABLE true
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default setpoint
//
#ifndef DEFSET
#define DEFSET 40.0
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default treatment setpoint
//
#ifndef DEFTREATSET
#define DEFTREATSET 108.0
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default treatment length (minutes)
//
#ifndef DEFTREATMINS
#define DEFTREATMINS 180
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default cooldown length (minutes)
//
#ifndef DEFCOOLMINS
#define DEFCOOLMINS 5
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default control point
//
#ifndef DEFCON
// #define DEFCON 0 // Ambient
// #define DEFCON 1 // Upper Hive
#define DEFCON 2 // Center Hive
// #define DEFCON 3 // Lower Hive
// #define DEFCON 4 // Output
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default temp control enabled
//
#ifndef CTRLENABLE
#define CTRLENABLE false
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define HEAT actuator pin
//
#ifndef HEAT
#define HEAT 13
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define fan actuator pin
//
#ifndef FAN
#define FAN 2 // TODO
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define fan pin inverted state
//
#ifndef FANINVERTED
#define FANINVERTED true
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Loop time in seconds for temp sampling
//
#ifndef TEMPLOOP
#define TEMPLOOP 2
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Loop time in seconds for Chamber PID control
// Sample time is in uSecs, should be 5-10x less
// than system time constant
//
#ifndef CHAMBERPIDLOOPRATE
#define CHAMBERPIDLOOPRATE 1
#define CHAMBERPIDSAMPLETIME (uint32_t)(30 * 1000 * 1000)
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Loop time in seconds for Heater PID control
// Sample time is in uSecs, should be 5-10x less
// than system time constant
//
#ifndef OUTPUTPIDLOOPRATE
#define OUTPUTPIDLOOPRATE 1
#define HEATERPIDSAMPLETIME (uint32_t)(30 * 1000 * 1000)
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define units format (true = Imperial, false = Metric)
//
#ifndef IMPERIAL
#define IMPERIAL true
#endif
//
//////////////////////////////////////////////////////////////////////////

#endif // CONFIG_H
